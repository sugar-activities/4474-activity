
__license__   = 'GPL v3'
__copyright__ = '2008-2010, Darko Miletic <darko.miletic at gmail.com>'
'''
novosti.rs
'''

import re
from calibre.web.feeds.news import BasicNewsRecipe

class Novosti(BasicNewsRecipe):
    title                 = 'Vecernje Novosti'
    __author__            = 'Darko Miletic'
    description           = 'U početku su bile istinske večernje novine - pokrenute u vreme Tršćanske krize, Italijansko-jugoslovenskog konflikta oko grada Trsta - ali su brzo izrasle u dnevni informativno-politički list, koji već godinama ima najveći tiraž u Srbiji.'
    publisher             = 'Kompanija Novosti'
    category              = 'news, politics, Serbia'
    oldest_article        = 2
    max_articles_per_feed = 100
    no_stylesheets        = True
    use_embedded_content  = False
    encoding              = 'utf-8'
    language              = 'sr'
    publication_type      = 'newspaper'
    extra_css             = """ @font-face {font-family: "sans1";src:url(res:///opt/sony/ebook/FONT/tt0003m_.ttf)}
                                .article_description,body{font-family: Arial,Helvetica,sans1,sans-serif}
                                .author{font-size: small}
                                .articleLead{font-size: large; font-weight: bold}
                            """

    conversion_options = {
                          'comment'   : description
                        , 'tags'      : category
                        , 'publisher' : publisher
                        , 'language'  : language
                        }

    preprocess_regexps = [(re.compile(u'\u0110'), lambda match: u'\u00D0')]

    keep_only_tags     = [dict(attrs={'class':['articleTitle','author','articleLead','articleBody']})]
    remove_tags        = [dict(name=['embed','object','iframe','base','link','meta'])]
    feeds              = [(u'Vesti', u'http://www.novosti.rs/rss/rss-vesti')]

    def preprocess_html(self, soup):
        for item in soup.findAll(style=True):
            del item['style']
        for item in soup.findAll('span', attrs={'class':'author'}):
            item.name='p'
        for item in soup.findAll('img'):
            if not item.has_key('alt'):
               item['alt'] = 'image'
        return soup



